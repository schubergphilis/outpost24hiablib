# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:
- job: BuildTest
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip setuptools wheel
      pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      pip install pytest pytest-azurepipelines
      pytest
    displayName: 'pytest'
- deployment: PushToPyPi        # instead of job keyword, use deployment keyword
  dependsOn: BuildTest
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    runOnce:
      deploy:
        steps:
        - script: |
                pip install setuptools wheel twine
          displayName: 'Install dependencies'
          #- script: |
          #      python setup.py sdist bdist_wheel
          #displayName: 'Create packages'

          #- task: TwineAuthenticate@1
          #displayName: 'Twine Authenticate'
          #inputs:
          #  pythonUploadServiceConnection: pypitest
 
        #- script: |
        #       python -m twine upload -r "pypitest" --config-file $(PYPIRC_PATH) dist/*.whl
  
#environment: PyPi
